#!/usr/bin/env python
# -*- coding: utf-8 -*-

from TaxiFareModel import data
from TaxiFareModel.trainer import Trainer
from TaxiFareModel.utils import compute_rmse
from sklearn.metrics import make_scorer
from sklearn.model_selection import cross_validate

# get data
df = data.get_data()
# clean data
df = data.clean_data(df)
# set X and y
X_train, X_test, y_train, y_test = data.holdout_data(df)

for i in range(2):
    trainer = Trainer(X_train, y_train)
    trainer.run(use_manhatten = i)
    
    # cross validate
    scores = cross_validate(trainer.pipeline, X_train, y_train, scoring=make_scorer(compute_rmse), n_jobs=-1, cv=10)
    rmse = scores['test_score'].mean()
    
    # evaluate
    #rmse = trainer.evaluate(X_test, y_test)
    
    # log
    trainer.mlflow_log_param("Estimator", 'LinearRegression')
    trainer.mlflow_log_param("DistanceMetric", 'manhatten' if i else 'distance')
    trainer.mlflow_log_metric("rmse", rmse)
    print(f'rmse: {rmse}')

    trainer.save_model()